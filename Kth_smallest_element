The question is

Given an array arr[] and an integer K where K is smaller than size of array, the task is to find the Kth smallest element in the given array. It is given that all array elements are distinct.

Example 1:

Input:
N = 6
arr[] = 7 10 4 3 20 15
K = 3
Output : 7
Explanation :
3rd smallest element in the given
array is 7.
Example 2:

Input:
N = 5
arr[] = 7 10 4 20 15
K = 4
Output : 15
Explanation :
4th smallest element in the given
array is 15.
Your Task:
You don't have to read input or print anything. Your task is to complete the function kthSmallest() which takes the array arr[], integers l and r denoting the starting and ending index of the array and an integer K as input and returns the Kth smallest element.

Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)
Constraints:
1 <= N <= 105
1 <= arr[i] <= 105
1 <= K <= N

// The code is

#include<stdio.h>
int kthSmallest(int arr[], int l, int r, int k)
{
int temp;
for(int i=l;i<=(r);i++)
{
for(int j=l;j<=(r);j++)
{
if(arr[j] > arr[j+1])
{
temp = arr[j];
arr[j] = arr[j+1];
arr[j+1] = temp;
}
}
}
for(int i=0;i<=(r);i++)
printf("%d",arr[i]);
return(arr[k-1]);
}
int main()
{
int test_cases;
scanf("%d",&test_cases);
while(test_case--)
{
int number_of_elements;
scanf("%d",&number_of_elements);
for(int i=0;i<number_of_elements;i++)
scanf("%d",&a[i]);
int k;
scanf("%d",&k);
printf("%d", kthSmallest(a,0,number_of_elements-1,k));
printf("\n");
}
return 0;
}
